name: Dockerizing to Amazon ECR

on:
  push:
    branches:
      - main
      
env:
  # AWS_REGION: ap-northeast-1        # set this to your preferred AWS region, e.g. us-west-1
  # ECR_REPOSITORY: aws-ecr-ssgpang           # set this to your Amazon ECR repository name
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}  # Docker Hub 사용자 이름
  DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}  # Docker Hub 비밀번호
  # AZURE_CONNECTION_STRING: ${{ secrets.AZURE_CONNECTION_STRING }}  # Azure 연결 문자열 시크릿
  # GIST_TOKEN: ${{ secrets.GIST_TOKEN }}  # Github Token
  

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    - name: Build and push image to Docker Hub
      run: |
        docker build -t ${{ env.DOCKER_HUB_USERNAME }}/ssgpang:${{ github.sha }} .
        docker push ${{ env.DOCKER_HUB_USERNAME}}/ssgpang:${{ github.sha }}

    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: ${{ secrets.AWS_REGION }}

    # - name: Login to Amazon ECR
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v1

    # - name: Build, tag, and push image to Amazon ECR
    #   id: build-image
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     IMAGE_TAG: ${{ github.sha }}
    #   run: |
    #     # Build a docker container and
    #     # push it to ECR so that it can
    #     # be deployed to ECS.
    #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
    #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    #     echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
